plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC8"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.gitlab.arturbosch.detekt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.stylingandroid.textclassification"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.core:core-ktx:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.5"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC2"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}

detekt {
    version = "1.0.0.RC8"
    profile("main") {
        input = "$projectDir/src/main/java"
        config = "$projectDir/detekt.yml"
        output = "$project.buildDir/reports/detekt.xml"
        //outputFormat = "xml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

check.dependsOn detektCheck
